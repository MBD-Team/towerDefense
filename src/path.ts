import { enemyBase, path, player } from './main';

export function createPath() {
  path.push({ positionX: enemyBase.positionX, positionY: enemyBase.positionY });
  path.push({ positionX: enemyBase.positionX - 1, positionY: enemyBase.positionY });
  path.push({ positionX: enemyBase.positionX - 2, positionY: enemyBase.positionY });
  path.push({ positionX: enemyBase.positionX - 3, positionY: enemyBase.positionY });
  path.push({ positionX: enemyBase.positionX - 4, positionY: enemyBase.positionY });
  path.push({ positionX: enemyBase.positionX - 5, positionY: enemyBase.positionY });
  path.push({ positionX: enemyBase.positionX - 5, positionY: enemyBase.positionY - 1 });
  path.push({ positionX: enemyBase.positionX - 5, positionY: enemyBase.positionY - 2 });
  path.push({ positionX: enemyBase.positionX - 4, positionY: enemyBase.positionY - 2 });
  path.push({ positionX: enemyBase.positionX - 3, positionY: enemyBase.positionY - 2 });
  path.push({ positionX: enemyBase.positionX - 2, positionY: enemyBase.positionY - 2 });
  path.push({ positionX: enemyBase.positionX - 1, positionY: enemyBase.positionY - 2 });
  path.push({ positionX: enemyBase.positionX, positionY: enemyBase.positionY - 2 });
  path.push({ positionX: enemyBase.positionX + 1, positionY: enemyBase.positionY - 2 });
  path.push({ positionX: enemyBase.positionX + 2, positionY: enemyBase.positionY - 2 });
  path.push({ positionX: enemyBase.positionX + 2, positionY: enemyBase.positionY - 1 });
  path.push({ positionX: enemyBase.positionX + 2, positionY: enemyBase.positionY - 0 });
  path.push({ positionX: enemyBase.positionX + 3, positionY: enemyBase.positionY - 0 });
  path.push({ positionX: enemyBase.positionX + 4, positionY: enemyBase.positionY - 0 });
  path.push({ positionX: enemyBase.positionX + 4, positionY: enemyBase.positionY - 1 });
  path.push({ positionX: enemyBase.positionX + 4, positionY: enemyBase.positionY - 2 });
  path.push({ positionX: enemyBase.positionX + 4, positionY: enemyBase.positionY - 3 });
  path.push({ positionX: enemyBase.positionX + 4, positionY: enemyBase.positionY - 4 });
  path.push({ positionX: enemyBase.positionX + 4, positionY: enemyBase.positionY - 5 });
  path.push({ positionX: enemyBase.positionX + 4, positionY: enemyBase.positionY - 6 });
  path.push({ positionX: enemyBase.positionX + 3, positionY: enemyBase.positionY - 6 });
  path.push({ positionX: enemyBase.positionX + 2, positionY: enemyBase.positionY - 6 });
  path.push({ positionX: enemyBase.positionX + 1, positionY: enemyBase.positionY - 6 });
  path.push({ positionX: enemyBase.positionX, positionY: enemyBase.positionY - 6 });
  path.push({ positionX: enemyBase.positionX - 1, positionY: enemyBase.positionY - 6 });
  path.push({ positionX: enemyBase.positionX - 2, positionY: enemyBase.positionY - 6 });
  path.push({ positionX: enemyBase.positionX - 2, positionY: enemyBase.positionY - 5 });
  path.push({ positionX: enemyBase.positionX - 2, positionY: enemyBase.positionY - 4 });
  path.push({ positionX: enemyBase.positionX - 3, positionY: enemyBase.positionY - 4 });
  path.push({ positionX: enemyBase.positionX - 4, positionY: enemyBase.positionY - 4 });
  path.push({ positionX: enemyBase.positionX - 4, positionY: enemyBase.positionY - 5 });
  path.push({ positionX: enemyBase.positionX - 4, positionY: enemyBase.positionY - 6 });
  path.push({ positionX: enemyBase.positionX - 4, positionY: enemyBase.positionY - 7 });
  path.push({ positionX: enemyBase.positionX - 4, positionY: enemyBase.positionY - 8 });
  path.push({ positionX: enemyBase.positionX - 3, positionY: enemyBase.positionY - 8 });
  path.push({ positionX: enemyBase.positionX - 2, positionY: enemyBase.positionY - 8 });
  path.push({ positionX: enemyBase.positionX - 1, positionY: enemyBase.positionY - 8 });
  path.push({ positionX: enemyBase.positionX, positionY: enemyBase.positionY - 8 });
  path.push({ positionX: enemyBase.positionX, positionY: enemyBase.positionY - 9 });
  //--------------------
  path.push({ positionX: player.positionX, positionY: player.positionY });
}
